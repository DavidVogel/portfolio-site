"use strict";(self.webpackChunkportfolio_site=self.webpackChunkportfolio_site||[]).push([[3834],{8309:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>h,contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Vital/UserGuide/Effects","title":"Effects","description":"Vital provides a variety of effects that can be used to shape the sound of your patches. The effects can be added to the effects chain in the Effects tab:","source":"@site/docs/Vital/UserGuide/Effects.mdx","sourceDirName":"Vital/UserGuide","slug":"/Vital/UserGuide/Effects","permalink":"/docs/Vital/UserGuide/Effects","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Effects"},"sidebar":"tutorialSidebar","previous":{"title":"Envelopes & LFOs","permalink":"/docs/Vital/UserGuide/Envelopes-and-LFOs"},"next":{"title":"Advanced","permalink":"/docs/Vital/UserGuide/Advanced"}}');var t=n(74848),r=n(28453),l=n(83677);const o={title:"Effects"},a="Effects",h={},d=[{value:"Chorus",id:"chorus",level:2},{value:"Compressor",id:"compressor",level:2},{value:"Modes",id:"modes",level:3},{value:"Threshold",id:"threshold",level:3},{value:"Ratio",id:"ratio",level:3},{value:"Attack",id:"attack",level:3},{value:"Release",id:"release",level:3},{value:"EQ",id:"eq",level:3},{value:"Delay",id:"delay",level:2},{value:"Distortion",id:"distortion",level:2},{value:"EQ",id:"eq-1",level:2},{value:"Filter",id:"filter",level:2},{value:"Flanger",id:"flanger",level:2},{value:"Phaser",id:"phaser",level:2},{value:"Reverb",id:"reverb",level:2}];function c(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"effects",children:"Effects"})}),"\n",(0,t.jsxs)(s.p,{children:["Vital provides a variety of effects that can be used to shape the sound of your patches. The effects can be added to the effects chain in the ",(0,t.jsx)(s.strong,{children:"Effects"})," tab:"]}),"\n",(0,t.jsx)("img",{src:"/img/vital-images/effects-tab.svg",alt:"Effects tab",className:"example-image",loading:"lazy",style:{display:"block",maxWidth:"700px",margin:"40px auto"}}),"\n",(0,t.jsx)(s.h2,{id:"chorus",children:"Chorus"}),"\n",(0,t.jsx)(s.p,{children:"A chorus effect attempts to replicate the phenomenon of multiple voices or instruments playing the same part in unison but with slight variations in timing, pitch, or timbre. This is emulated by duplicating the incoming signal, applying pitch and time modulation (delay) to the copies, and then mixing them with the original signal. The result is a thicker, more spacious tone, reminiscent of several performers sounding together rather than just one."}),"\n",(0,t.jsx)("img",{src:"/img/vital-images/chorus.svg",alt:"Chorus effect",className:"example-image",style:{display:"block",maxWidth:"650px",margin:"40px auto"}}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Voices"})," (",(0,t.jsx)(s.em,{children:"4 to 16"}),"): Determines the number of delay line pairs (chorus voices) active. More voices enrich the sound by adding several modulated copies."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Frequency"}),": The modulation frequency which can be tempo-synced using a control that toggles between free-running frequency and beat-synchronized mode, ensuring the chorus movement aligns with the musical tempo.","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Seconds"})," (",(0,t.jsx)(s.em,{children:"0.125 Hz to 64.0 Hz"}),"): Free-running frequency that repeats every ",(0,t.jsx)(s.em,{children:"x"})," seconds."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Tempo"})," (",(0,t.jsx)(s.em,{children:"Freeze, 32/1 to 1/16"}),'): Sets the speed in musical subdivisions of the host\'s BPM. Choosing "Freeze" stops the modulation.']}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Tempo Dotted"})," (",(0,t.jsx)(s.em,{children:"Freeze, 32/1 to 1/16"}),"): Sets the speed in dotted musical subdivisions of the host's BPM."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Tempo Triplets"})," (",(0,t.jsx)(s.em,{children:"Freeze, 32/1 to 1/16"}),"): Sets the speed in triplet musical subdivisions of the host's BPM."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Depth"})," (",(0,t.jsx)(s.em,{children:"0 to 100%"}),"): Controls the modulation depth. It modulates the delay times using a sinusoid, determining how pronounced the time variation is and, therefore, the lushness of the effect."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Delay 1 and Delay 2"})," (",(0,t.jsx)(s.em,{children:"0.976 ms to 19.99 ms"}),"): These parameters specify the base delay times. They are interpolated to set the delay for each voice. The average of these two delays provides a central value, while interpolation allows for subtle differences, contributing to the stereo width and phase complexity."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Visualizer"}),": Gives a visual representation of the ",(0,t.jsx)(s.strong,{children:"Voices"}),", ",(0,t.jsx)(s.strong,{children:"Frequency"}),", ",(0,t.jsx)(s.strong,{children:"Depth"}),", and ",(0,t.jsx)(s.strong,{children:"Delay"})," parameters."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Feedback"})," (",(0,t.jsx)(s.em,{children:"-95% to 95%"}),"): Feeds the delayed signal back into the delay lines, enhancing the effect's intensity.","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Positive Feedback"}),":\nThe delayed signal is fed back as-is (or with only gain adjustment), reinforcing the effect. This tends to enhance the doubling and thickening by constructively adding delayed copies, which can make the effect sound richer but may also risk buildup or resonances if too high."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Negative Feedback"}),":\nThe delayed signal is inverted before being fed back. This tends to reduce buildup and can smooth out the effect, sometimes resulting in a more subtle modulation. Negative feedback can help control excess coloration or prevent self-oscillation."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Mix"})," (",(0,t.jsx)(s.em,{children:"0 to 100%"}),"): The wet/dry mix controls the balance between the original (dry) and the delayed (wet) signals."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Filter (graph/control)"}),": A graphical representation of the filter applied to the delay signals. It can take the shape of an all-pass, low-pass, high-pass, or band-pass filter by adjusting the ",(0,t.jsx)(s.strong,{children:"Cutoff"})," and ",(0,t.jsx)(s.strong,{children:"Spread"}),". Drag inside the graph to change the parameters.","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Cutoff"})," (",(0,t.jsx)(s.em,{children:"8 to 136"}),"): Sets the cutoff frequency for the filter applied to the delay signals, shaping the tonal character."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Spread"})," (",(0,t.jsx)(s.em,{children:"0 to 1"}),"): Adjusts the filter's frequency spread along the delay lines, which can tilt the filter's response to create a broader or tighter effect across the voices."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"compressor",children:"Compressor"}),"\n",(0,t.jsx)(s.p,{children:"A compressor is used to reduce the dynamic range of a signal. It makes loud parts quieter and/or quiet parts louder, depending on the settings."}),"\n",(0,t.jsx)("img",{src:"/img/vital-images/compressor.svg",alt:"Compressor effect",className:"example-image",loading:"lazy",style:{display:"block",maxWidth:"650px",margin:"40px auto"}}),"\n",(0,t.jsx)(s.h3,{id:"modes",children:"Modes"}),"\n",(0,t.jsxs)(s.p,{children:["There are ",(0,t.jsx)(s.strong,{children:"four different modes"})," you can use:"]}),"\n",(0,t.jsx)("img",{src:"/img/vital-images/compressor-bands.svg",alt:"Compressor effect with bands",className:"example-image",loading:"lazy",style:{margin:"20px 0"}}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Multiband"}),": Splits the signal with filters into low, mid, and high frequencies. Each band is processed independently with its own threshold and ratio settings."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Low Band"}),": Combines the mid and high bands into a single band and separately processes the low frequencies."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"High Band"}),": Combines the low and mid bands into a single band and separately processes the high frequencies."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Single Band"}),": Processes the entire frequency range without splitting."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"threshold",children:"Threshold"}),"\n",(0,t.jsx)(s.p,{children:"Threshold is the dB level at which the compressor starts working. All compressor bands have the same threshold range: -79 dB to -1 dB."}),"\n",(0,t.jsxs)(s.p,{children:["Vital's compressor has both ",(0,t.jsx)(s.strong,{children:"upward"})," and ",(0,t.jsx)(s.strong,{children:"downward"})," compression capabilities:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Upward compression"}),": Boosts the signal below the lower threshold. Signals above the threshold remain unaffected."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Downward compression"}),": Reduces the signal above the upper threshold. Signals below the threshold remain unaffected."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["To adjust the threshold, click and drag the outer edge of the compressor band. If you hold ",(0,t.jsx)(s.code,{children:"Shift"})," while dragging, all bands for both compressors will move together."]}),"\n",(0,t.jsx)(s.h3,{id:"ratio",children:"Ratio"}),"\n",(0,t.jsx)(s.p,{children:"The ratio determines how strongly the compressor reduces or increases the signal level above/below the threshold."}),"\n",(0,t.jsx)(s.p,{children:"In Vital, the ratio values are not explicitly shown. You can see the approximate value by looking at the number of lines in the compressor. The more lines, the higher the ratio. These are adjustable by clicking and dragging inside the compressor band."}),"\n",(0,t.jsx)("img",{src:"/img/vital-images/compressor-ratios.svg",alt:"Compressor effect with ratios",className:"example-image",loading:"lazy",style:{display:"block",maxWidth:"650px",margin:"40px auto"}}),"\n",(0,t.jsx)(s.p,{children:"With downward compression, once you get to a ratio of 1:1, the green color will disappear, indicating no compression is applied. This does not happen with upward compression. When going above 1:1 with upward compression, the color will change to that of the downward compressor, indicating downward compression."}),"\n",(0,t.jsx)(s.p,{children:"The ratios mean different things for upward and downward compression:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["In ",(0,t.jsx)(s.strong,{children:"downward compression"}),", a 2:1 ratio means for every 2 dB ",(0,t.jsx)(s.strong,{children:"above"})," the threshold, it is allowed to rise by only 1 dB."]}),"\n",(0,t.jsxs)(s.li,{children:["In ",(0,t.jsx)(s.strong,{children:"upward compression"}),", the ratio is inverted, so a 2:1 ratio means for every 2 dB ",(0,t.jsx)(s.strong,{children:"below"})," the threshold, the output is boosted by 1 dB."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["For example, let's consider a scenario with the following settings for ",(0,t.jsx)(s.strong,{children:"upward compression"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Threshold"}),": -20 dB"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Ratio"}),": 2:1"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Signal"}),": -26 dB (6 dB below the threshold)"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"upward compression output"})," will be -23 dB. Instead of boosting all 6 dB, the signal will be lifted so that it's effectively only 3 dB under the threshold. That means the compressor applies +3 dB of gain to bring the signal up from -26 dB to -23 dB."]}),"\n",(0,t.jsxs)("figure",{style:{display:"block",maxWidth:"650px",margin:"40px auto"},children:[(0,t.jsx)("img",{src:"/img/vital-images/upward-compression-example.svg",alt:"Upward compression example",loading:"lazy",className:"example-image"}),(0,t.jsx)("figcaption",{children:"Upward compression example"})]}),"\n",(0,t.jsxs)(s.p,{children:["Let's consider a scenario with the following settings for ",(0,t.jsx)(s.strong,{children:"downward compression"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Threshold"}),": -28 dB"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Ratio"}),": 2:1"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Signal"}),": -12 dB (16 dB above the threshold)"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"downward compression output"})," will be -20 dB. For every 2 dB above the threshold, the output is allowed to rise by only 1 dB. So, the signal will be reduced by 8 dB to bring it down from -12 dB to -20 dB."]}),"\n",(0,t.jsxs)("figure",{style:{display:"block",maxWidth:"650px",margin:"40px auto"},children:[(0,t.jsx)("img",{src:"/img/vital-images/downward-compression-example.svg",alt:"Downward compression example",loading:"lazy",className:"example-image"}),(0,t.jsx)("figcaption",{children:"Downward compression example"})]}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsx)(s.p,{children:"Knowing the exact values is not very useful, but understanding the concept is. The visual representations of the ratio, threshold, and input/output levels are a helpful guide."})}),"\n",(0,t.jsx)(s.h3,{id:"attack",children:"Attack"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"attack parameter"})," (",(0,t.jsx)(s.em,{children:"0 to 100%"}),") controls how quickly the compressor applies its gain change after the signal crosses the threshold. However, its effect manifests a bit differently depending on whether you're compressing downwards (reducing level) or upwards (boosting level)."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Downward compression"}),": The compressor starts working when the input ",(0,t.jsx)(s.em,{children:"exceeds"})," the threshold.","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["A ",(0,t.jsx)(s.strong,{children:"fast attack"}),' causes the compressor to reduce the gain as soon as the signal goes above the threshold. This is useful for taming sharp transients (like a snare hit or a vocal plosive) and can result in a "pumping" effect if the attack time is aggressive.']}),"\n",(0,t.jsxs)(s.li,{children:["With a ",(0,t.jsx)(s.strong,{children:"slow attack"}),", the compressor allows some of the initial transient to pass through uncompressed before reducing the gain. This can preserve the natural impact of the sound, though it might let peaks through that you intended to control."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Upward compression"}),": The compressor starts working when the input ",(0,t.jsx)(s.em,{children:"falls below"})," the threshold, applying gain to boost the quieter parts.","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["A ",(0,t.jsx)(s.strong,{children:"fast attack"})," promptly lifts quieter parts, making them audible without delay. If too abrupt, it can sound unnatural."]}),"\n",(0,t.jsxs)(s.li,{children:["With a ",(0,t.jsx)(s.strong,{children:"slow attack"}),", the boost is applied more gradually, leading to a smoother, more natural increase in volume. However, it may not catch very short, quiet events."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"release",children:"Release"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"release"})," (",(0,t.jsx)(s.em,{children:"0 to 100%"}),") controls how quickly the compressor stops applying its gain change once the signal moves back toward or beyond the threshold. Just like with attack parameter, the release parameter plays a crucial role in shaping the sound\u2014but its effect differs slightly depending on whether you're dealing with downward or upward compression."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Downward compression"}),": The compressor reduces the gain when the signal ",(0,t.jsx)(s.em,{children:"exceeds"}),' the threshold. Once the signal falls back below the threshold, the compressor needs to "release" its gain reduction and return to normal (unity gain).',"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Fast Release"}),':\nThe gain reduction is removed quickly after the signal falls below the threshold. This rapid recovery can be useful for material with quickly changing dynamics. However, if too abrupt, it can lead to audible artifacts such as "pumping" or a choppy transition, where the level jumps suddenly back up.']}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Slow Release"}),":\nThe compressor takes more time to gradually restore the gain. This results in a smoother, more natural-sounding return to the uncompressed level. The trade-off is that if the release is too slow, the compressor might hold onto the gain reduction longer than desired, potentially dulling the natural dynamics of the sound."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Upward compression"}),": The compressor boosts the gain when the signal ",(0,t.jsx)(s.em,{children:"falls below"})," the threshold. When the signal rises above the threshold, the extra gain applied needs to be removed, and that's where the release parameter comes into play.","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Fast Release"}),":\nThe additional gain boost is quickly removed as soon as the signal rises above the threshold. This can be beneficial for ensuring that the boost doesn't linger on louder passages. However, if the release is too fast, the transition back to the unboosted level may sound abrupt, leading to a jarring drop in level."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Slow Release"}),":\nThe gain boost is gradually reduced when the signal exceeds the threshold. This gentle recovery can maintain a more natural and seamless dynamic curve. On the downside, if the release is too slow, the compressor might continue to apply extra gain longer than necessary, which can lead to an unnatural-sounding swell or a lack of clarity in the transitions between quiet and louder passages."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"eq",children:"EQ"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Low/Band/High"}),": EQ for the post-compression signal."]}),"\n",(0,t.jsx)(s.h2,{id:"delay",children:"Delay"}),"\n",(0,t.jsx)(s.p,{children:"Vital's delay effect applies time-based echoes with modulation and filtering. You can achieve effects that range from clean, rhythmic echoes to more saturated, filtered repetitions with rich spatial characteristics."}),"\n",(0,t.jsx)("img",{src:"/img/vital-images/delay.svg",alt:"Delay effect",className:"example-image",loading:"lazy",style:{display:"block",maxWidth:"650px",margin:"40px auto"}}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Frequency (sync)"}),":\nControls the delay time by setting the base frequency of the delay line. It can operate as a free-running frequency (directly controlling delay time) or be tempo-synced (using a beats-per-minute reference) so that the echoes align rhythmically with the music."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Seconds"})," (",(0,t.jsx)(s.em,{children:"0.001 Hz to 4.0 Hz"}),"): Free-running frequency that repeats every ",(0,t.jsx)(s.em,{children:"x"})," seconds."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Tempo"})," (",(0,t.jsx)(s.em,{children:"4/1 to 1/64"}),"): Sets the speed in musical subdivisions of the host's BPM."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Tempo Dotted"})," (",(0,t.jsx)(s.em,{children:"4/1 to 1/64"}),"): Sets the speed in dotted musical subdivisions of the host's BPM."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Tempo Triplets"})," (",(0,t.jsx)(s.em,{children:"4/1 to 1/64"}),"): Sets the speed in triplet musical subdivisions of the host's BPM."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Mode"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Mono"}),": A simple delay where a single delay line is applied equally to both channels."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Stereo"}),": Uses separate delay times for left and right channels to create a wider image."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Ping Pong"}),": Alternates the delayed signal between the left and right channels, creating a bouncing echo effect."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Mid Ping Pong"}),": Similar to ping pong but uses a mid-image source to blend some channels before alternating, providing a slightly different spatial feel."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Feedback"})," (",(0,t.jsx)(s.em,{children:"-100% to 100%"}),"): Determines the proportion of the delayed (echoed) signal that is fed back into the delay line."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Positive Feedback"}),":\nThe delayed signal is fed back in-phase (or without phase inversion). This reinforces the echoes, potentially increasing their amplitude and creating a denser, sometimes more resonant or even self-oscillating effect if pushed too high."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Negative Feedback"}),":\nThe delayed signal is inverted before being fed back. This tends to cancel or attenuate some aspects of the repeated echoes, producing a cleaner or more controlled decay. It often results in less buildup and can reduce the risk of runaway oscillations."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Mix"})," (",(0,t.jsx)(s.em,{children:"0 to 100%"}),"):\nSets the balance between the dry (unprocessed) signal and the wet (delayed) signal. It controls how prominently the delay effect is heard in the final output."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Filter (graph/control)"}),": A graphical representation of the filter applied to the delay signals. It can take the shape of an all-pass, low-pass, high-pass, or band-pass filter by adjusting the ",(0,t.jsx)(s.strong,{children:"Cutoff"})," and ",(0,t.jsx)(s.strong,{children:"Spread"}),". Drag inside the graph to change the parameters."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Cutoff"})," (",(0,t.jsx)(s.em,{children:"8 to 136"}),"):\nApplies internal filtering to the delayed signal using one-pole filters. The cutoff frequency controls which frequencies are attenuated, typically damping very low or high frequencies to create a more polished, natural echo."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Spread"})," (",(0,t.jsx)(s.em,{children:"0 to 1"}),"):\nAdjusts the filter's frequency spread around the cutoff frequency. This parameter modifies how broadly the filter affects the delayed signal's spectrum, allowing for subtle tonal shaping of the echoes."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"distortion",children:"Distortion"}),"\n",(0,t.jsx)(s.p,{children:"Vital's distortion effect shapes the incoming audio signal using several selectable algorithms and an optional filtering stage. The overall signal is processed based on a drive value before blending with the original signal using a mix control. An extra filter stage can be applied either before or after distortion to further sculpt the tone."}),"\n",(0,t.jsx)("img",{src:"/img/vital-images/distortion.svg",alt:"Distortion effect",className:"example-image",loading:"lazy",style:{display:"block",maxWidth:"650px",margin:"40px auto"}}),"\n",(0,t.jsx)(s.p,{children:"The interface is divided into controls for the distortion and controls for the filter."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Distortion controls"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Type"}),": Determines the algorithm used:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Soft clip"}),": Uses a hyperbolic tangent (tanh) function to softly compress the peaks."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Hard clip"}),": Clamps the signal abruptly after amplification, leading to a more aggressive effect."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Linear fold"}),': Scales and offsets the signal, then repeatedly "folds" it back into the [-1, 1] range.']}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Sine fold"}),": Maps the signal using a sine function for a smoother, more musical waveshaping."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Bit crush"}),": Quantizes the sample values (rounding to a fixed step size) to simulate low-resolution digital sound."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Down sample"}),": Reduces the effective sample rate, introducing aliasing and a gritty digital effect."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Type/Drive graph and control"}),": A visual representation of the distortion type and drive level. Drag inside the graph to adjust the drive."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Drive"})," (",(0,t.jsx)(s.em,{children:"-30 dB to 30 dB"}),"): Adjusts the gain applied to the input signal before distortion, determining how hard the effect is driven. A higher drive increases the intensity of distortion."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Mix"})," (",(0,t.jsx)(s.em,{children:"0 to 1"}),"): Blends the dry (original) signal with the processed (distorted) signal. A mix control allows you to dial in subtle warmth or extreme distortion."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Filter controls"}),": The filter can be adjusted to act as a low-pass, high-pass, band-pass, or peak filter. It can be applied before or after the distortion stage, shaping the spectral content of the signal."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Filter (mode)"}),":"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"None"}),": No filtering is applied."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Pre"}),": The filter is applied before the distortion stage, altering the input waveform."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Post"}),": The filter is applied after distortion, smoothing or accentuating the distorted signal."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Filter graph and control"}),": A graphical representation of the filter applied to the signal. Drag inside the graph to adjust the filter parameters."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Cutoff"})," (",(0,t.jsx)(s.em,{children:"8 to 136 semitones"}),"): The cutoff frequency sets the point where filtering starts to attenuate frequencies. This shapes the spectral content of the signal."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resonance"})," (",(0,t.jsx)(s.em,{children:"0 to 100%"}),"): Works with the cutoff by emphasizing frequencies around the cutoff point, adding a peak to the filter's response that can accentuate certain harmonics."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Blend"})," (",(0,t.jsx)(s.em,{children:"0 to 2"}),"): Controls the mix between different filter outputs (for example, mixing between the low-pass and high-pass\u2014or, more generally, filtered and unfiltered\u2014contents) so that you can fine-tune the tonal coloration imposed by the filter on the distorted sound. A higher blend value emphasizes the filter's contribution, altering the timbre more, while a lower blend preserves more of the raw distortion character."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"eq-1",children:"EQ"}),"\n",(0,t.jsx)(s.p,{children:'Vital\'s equalizer effect is implemented as a three-band processor that splits the audio into low, mid ("band"), and high frequency regions. These regions can be independently adjusted via the graph as well as the knobs. Each band has separate settings for gain, cutoff, and resonance.'}),"\n",(0,t.jsx)("img",{src:"/img/vital-images/eq.svg",alt:"EQ effect",className:"example-image",loading:"lazy",style:{display:"block",maxWidth:"650px",margin:"40px auto"}}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Low/Band/High"}),":\nThese refer to the three separate frequency sections of the EQ. Each band can be set to different filter modes (for example, low band may use a shelving or high-pass filter, mid band can use a shelving or notch filter, and high band may use a shelving or low-pass filter) in order to target the desired part of the frequency spectrum."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Gain"})," (",(0,t.jsx)(s.em,{children:"-15 dB to 15 dB"}),"):\nThe gain parameter for each band controls the amount of boost or cut applied to signals in that frequency region. Adjusting gain alters the amplitude of the band, shaping the overall tonal balance of the audio."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Cutoff"})," (",(0,t.jsx)(s.em,{children:"8 to 136 semitones"}),"):\nThe cutoff value determines the transition frequency at which the filter begins to operate. For a shelf filter, it sets the point where boosting or attenuating starts; for a notch filter, it marks the center of the frequency dip. This frequency can be modulated for dynamic EQ adjustments."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resonance"})," (",(0,t.jsx)(s.em,{children:"0 to 100%"}),"):\nAlso known as the Q factor, resonance adjusts the emphasis at the cutoff frequency. A higher resonance results in a more pronounced peak (or dip), sharpening the filter's response around the cutoff and potentially adding character or coloration to the sound."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"filter",children:"Filter"}),"\n",(0,t.jsx)("img",{src:"/img/vital-images/filter.svg",alt:"Filter effect",className:"example-image",loading:"lazy",style:{display:"block",maxWidth:"600px",margin:"40px auto"}}),"\n",(0,t.jsxs)(s.p,{children:["The filter used as an effect is exactly the same as the filters in the Voice tab, except there are no routing options. Refer to the ",(0,t.jsx)(s.a,{href:"/docs/Vital/UserGuide/Filters",children:"Filters"})," section for more information."]}),"\n",(0,t.jsx)(s.h2,{id:"flanger",children:"Flanger"}),"\n",(0,t.jsx)(s.p,{children:'Vital\'s flanger effect is implemented using a modulated delay line that varies the delay over time, creating the classic sweeping, "whooshing" sound. The effect can range from subtle shimmer to bold, dramatic sweeps.'}),"\n",(0,t.jsx)("img",{src:"/img/vital-images/flanger.svg",alt:"Flanger effect",className:"example-image",loading:"lazy",style:{display:"block",maxWidth:"600px",margin:"40px auto"}}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Frequency (sync)"}),":\nControls the speed of the LFO that modulates the delay time, which can be tempo-synced using a control that toggles between free-running frequency and beat-synchronized mode, ensuring the flanger's sweep moves in time with the musical tempo."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Seconds"})," (",(0,t.jsx)(s.em,{children:"0.250 Hz to 32 Hz"}),"): Free-running frequency that repeats every ",(0,t.jsx)(s.em,{children:"x"})," seconds."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Tempo"})," (",(0,t.jsx)(s.em,{children:"Freeze, 32/1 to 1/16"}),"): Sets the speed in musical subdivisions of the host's BPM."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Tempo Dotted"})," (",(0,t.jsx)(s.em,{children:"Freeze, 32/1 to 1/16"}),"): Sets the speed in dotted musical subdivisions of the host's BPM."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Tempo Triplets"})," (",(0,t.jsx)(s.em,{children:"Freeze, 32/1 to 1/16"}),"): Sets the speed in triplet musical subdivisions of the host's BPM."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Offset"})," (",(0,t.jsx)(s.em,{children:"0 to 360 degrees"}),'):\nAdjusts the phase difference between left and right modulation (the "phase offset"). This creates a stereo effect by causing the delay time on one channel to lead or lag the other, enhancing the spatial movement.']}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Feedback"})," (",(0,t.jsx)(s.em,{children:"-100% to 100%"}),"):\nDetermines how much of the processed (flanged) signal is fed back into the delay line. Increasing feedback strengthens the resonance and can create a more pronounced, swirling effect."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Positive Feedback:"})," The delayed signal is fed back without phase inversion. This reinforces the comb-filtering effect, making the notches and peaks more pronounced and adding resonance to the sweep."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Negative Feedback:"})," The delayed signal is inverted before being fed back. This tends to smooth out the response and reduce excessive resonance, leading to a subtler, sometimes cleaner modulation character."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Mix"})," (",(0,t.jsx)(s.em,{children:"0 to 100%"}),"):\nSets the balance between the dry (unprocessed) signal and the wet (flanged) signal. A higher mix value makes the flanger effect more prominent in the output."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Center"})," (",(0,t.jsx)(s.em,{children:"8 to 136 semitones"}),'):\nEstablishes the base delay time around which the LFO modulates. This "center" value is typically derived from a MIDI note conversion, setting the core delay duration that the modulation oscillates around.']}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Depth"})," (",(0,t.jsx)(s.em,{children:"0 to 100%"}),"):\nControls the amount by which the delay time deviates from the center value. Greater depth results in more dramatic variations in delay time, yielding a wider, more intense flanging sweep."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"phaser",children:"Phaser"}),"\n",(0,t.jsx)(s.p,{children:"Vital's phaser effect modulates a series of all-pass filter stages using an LFO to create sweeping notches and peaks in the frequency response. It allows fine control over the dynamic and spatial characteristics of the phaser, from subtle shimmer to dramatic, sweeping effects."}),"\n",(0,t.jsx)("img",{src:"/img/vital-images/phaser.svg",alt:"Phaser effect",className:"example-image",loading:"lazy",style:{display:"block",maxWidth:"600px",margin:"40px auto"}}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Frequency (sync)"}),":\nSets the LFO rate that modulates the filter cutoff, which can be tempo-synced using a control that toggles between free-running frequency and beat-synchronized mode, ensuring the sweeping motion plays rhythmically with the music."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Seconds"})," (",(0,t.jsx)(s.em,{children:"0.250 Hz to 32 Hz"}),"): Free-running frequency that repeats every ",(0,t.jsx)(s.em,{children:"x"})," seconds."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Tempo"})," (",(0,t.jsx)(s.em,{children:"Freeze, 32/1 to 1/16"}),"): Sets the speed in musical subdivisions of the host's BPM."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Tempo Dotted"})," (",(0,t.jsx)(s.em,{children:"Freeze, 32/1 to 1/16"}),"): Sets the speed in dotted musical subdivisions of the host's BPM."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Tempo Triplets"})," (",(0,t.jsx)(s.em,{children:"Freeze, 32/1 to 1/16"}),"): Sets the speed in triplet musical subdivisions of the host's BPM."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Offset"})," (",(0,t.jsx)(s.em,{children:"0 to 360 degrees"}),"):\nAdjusts the phase offset of the modulation. This can introduce a stereo spread by shifting the LFO's phase between channels, giving the effect more spatial width."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Blend"})," (",(0,t.jsx)(s.em,{children:"0 to 2"}),"): Morphs between fewer and more notches in the frequency spectrum. This is the same as it is for the ",(0,t.jsx)(s.a,{href:"/docs/Vital/UserGuide/Filters#phaser-filter",children:"phaser filter"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Feedback"})," (",(0,t.jsx)(s.em,{children:"0 to 100%"}),"):\nControls how much of the processed signal is fed back into the filter. Higher feedback increases resonance, deepening the notches and peaks in the effect's frequency response."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Mix"})," (",(0,t.jsx)(s.em,{children:"0 to 100%"}),"):\nBalances the dry (original) signal with the wet (phased) signal. A higher mix value makes the phasing effect more pronounced."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Center"})," (",(0,t.jsx)(s.em,{children:"8 to 136 semitones"}),'):\nDetermines the base cutoff frequency (typically specified as a MIDI note value) around which the LFO modulates. This sets the "central" position of the notches and is key to shaping the overall tonal character.']}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Depth"})," (",(0,t.jsx)(s.em,{children:"0 to 48 semitones"}),"):\nModulates the extent of the cutoff variation. Greater depth results in a wider sweep of the filter's cutoff frequency, intensifying the phaser's characteristic movement."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"reverb",children:"Reverb"}),"\n",(0,t.jsx)(s.p,{children:"Vital's reverb effect creates a spacious, immersive sound by driving the input signal through a dense network of all-pass filters and feedback delay lines. This simulates the complex reflections found in physical spaces. The reverb module also offers multiple filtering and modulation options for fine-tuning the character of the reverb tail."}),"\n",(0,t.jsx)("img",{src:"/img/vital-images/reverb.svg",alt:"Reverb effect",className:"example-image",loading:"lazy",style:{display:"block",maxWidth:"600px",margin:"40px auto"}}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Pre low cut"})," (",(0,t.jsx)(s.em,{children:"0 to 128 semitones"}),"):\nA filter applied to the input before it enters the reverb network that attenuates very low frequencies. This helps remove unwanted low-end rumble and keeps the reverb clearer."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Pre high cut"})," (",(0,t.jsx)(s.em,{children:"0 to 128 semitones"}),"):\nA complementary filter on the input that attenuates excessive high frequencies, ensuring the reverb does not become too bright or harsh."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"EQ (tabbed low/high graph)"}),":\nA visual and interactive control that lets you choose which of the feedback EQ bands (low shelf or high shelf) you want to adjust. Toggling between these on the graph updates which frequency band's ",(0,t.jsx)(s.strong,{children:"Cutoff"})," and ",(0,t.jsx)(s.strong,{children:"Gain"})," are being controlled."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Cutoff"})," (",(0,t.jsx)(s.em,{children:"0 to 128 semitones"}),"):\nIn the feedback EQ, the cutoff defines the frequency at which the shelving filter begins to affect the feedback signal. It shapes the tonal balance of the reverb tail by emphasizing or de-emphasizing a portion of the frequency spectrum."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Gain"})," (",(0,t.jsx)(s.em,{children:"-6 dB to 0 dB"}),"):\nAdjusts the amplitude of the filtered feedback path. In combination with the cutoff controls, it determines how strongly a particular EQ band (low or high) is emphasized within the reverb tail."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Chorus amt"})," (",(0,t.jsx)(s.em,{children:"0 to 100%"}),"):\nDetermines how much chorus modulation is applied to the reverb tail. Adding chorus smears the reflections slightly, creating a thicker, more diffused sound."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Chorus Frq"})," (",(0,t.jsx)(s.em,{children:"0 to 8 Hz"}),"):\nControls the speed (frequency) of the chorus modulation. Faster modulation results in a more rapidly fluctuating character, while slower modulation creates a gentler, more undulating movement."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Delay"})," (",(0,t.jsx)(s.em,{children:"0 to 0.3 s"}),"):\nSets the pre-delay time before the reverb kicks in. A longer delay creates more separation between the dry sound and its reverberated reflections, simulating a larger physical space."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Size"})," (",(0,t.jsx)(s.em,{children:"0 to 100%"}),"):\nSimulates the dimensions of the reverb space. A larger size parameter typically results in longer delays and a more expansive tail, making the effect sound as if it's in a bigger room or hall."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Mix"})," (",(0,t.jsx)(s.em,{children:"0 to 100%"}),"):\nThe dry/wet mix balances the level of the unaffected (dry) signal versus the processed (wet) reverb. Adjust it to control how dominant the reverb is in the final output."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Time"})," (",(0,t.jsx)(s.em,{children:"0.015 s to 64 s"}),"):\nDetermines the decay time of the reverb tail\u2014that is, how long it takes for the reverb to fade to an almost inaudible level. This parameter is central to defining the overall ambience and character of the reverberation."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(l.b,{})]})}function g(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);