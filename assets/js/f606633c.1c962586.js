"use strict";(self.webpackChunkportfolio_site=self.webpackChunkportfolio_site||[]).push([[4790],{17461:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>h,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Vital/UserGuide/Wavetable-Editor","title":"Wavetable Editor","description":"The wavetable editor is one of the key and most unique features of Vital. It allows you to create complex wavetables by graphically manipulating the waveform, harmonics, and phases.","source":"@site/docs/Vital/UserGuide/Wavetable-Editor.mdx","sourceDirName":"Vital/UserGuide","slug":"/Vital/UserGuide/Wavetable-Editor","permalink":"/docs/Vital/UserGuide/Wavetable-Editor","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Wavetable Editor"},"sidebar":"tutorialSidebar","previous":{"title":"Oscillators & Sampler","permalink":"/docs/Vital/UserGuide/Oscillators-and-Sampler"},"next":{"title":"Filters","permalink":"/docs/Vital/UserGuide/Filters"}}');var a=i(74848),t=i(28453),r=i(83677);const l={title:"Wavetable Editor"},o="Wavetable Editor",h={},d=[{value:"Presets",id:"presets",level:2},{value:"Keyframes",id:"keyframes",level:2},{value:"Sources",id:"sources",level:2},{value:"Wave source",id:"wave-source",level:3},{value:"Wave source editor",id:"wave-source-editor",level:4},{value:"Blend modes",id:"blend-modes",level:4},{value:"Bar editors",id:"bar-editors",level:4},{value:"Line source",id:"line-source",level:3},{value:"Audio file source",id:"audio-file-source",level:3},{value:"Modifiers",id:"modifiers",level:2},{value:"Phase shift",id:"phase-shift",level:3},{value:"Wave window",id:"wave-window",level:3},{value:"Frequency filter",id:"frequency-filter",level:3},{value:"Slew limiter",id:"slew-limiter",level:3},{value:"Wave folder",id:"wave-folder",level:3},{value:"Wave warp",id:"wave-warp",level:3}];function c(e){const s={a:"a",admonition:"admonition",annotation:"annotation",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",math:"math",mfrac:"mfrac",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",ol:"ol",p:"p",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"wavetable-editor",children:"Wavetable Editor"})}),"\n",(0,a.jsx)(s.p,{children:"The wavetable editor is one of the key and most unique features of Vital. It allows you to create complex wavetables by graphically manipulating the waveform, harmonics, and phases."}),"\n",(0,a.jsxs)(s.p,{children:['In the editor, you can stack multiple waveforms ("',(0,a.jsx)(s.a,{href:"#sources",children:"sources"}),'") and alter them in a variety of ways using "',(0,a.jsx)(s.a,{href:"#modifiers",children:"modifiers"}),'."']}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"#keyframes",children:"Keyframes"})," are used to create the single waveframes that constitute the wavetable, which are morphed between using the frame scroller."]}),"\n",(0,a.jsxs)(s.p,{children:["See the ",(0,a.jsx)(s.a,{href:"/docs/Vital/UserGuide/Oscillators-and-Sampler",children:"Oscillators"})," section for how to use the wavetables you create in the wavetable editor."]}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/wavetable-editor.svg",alt:"Wavetable Editor",className:"example-image",loading:"lazy",style:{marginTop:"20px"}}),"\n",(0,a.jsx)(s.admonition,{type:"danger",children:(0,a.jsx)(s.p,{children:"There is no undo/redo functionality in the wavetable editor. Be sure to save your work often."})}),"\n",(0,a.jsx)(s.h2,{id:"presets",children:"Presets"}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/wavetable-editor-presets.svg",alt:"Wavetable Editor Presets",className:"example-image",loading:"lazy",style:{maxWidth:"650px"}}),"\n",(0,a.jsxs)(s.p,{children:["The Presets menu allows you to load, save, favorite, and search for wavetables. To see where these are saved on your system, right-click on a preset and select ",(0,a.jsx)(s.strong,{children:"Open File Location"}),"."]}),"\n",(0,a.jsxs)(s.p,{children:['The "hamburger menu" gives you options to save, import, and export wavetables. Click on ',(0,a.jsx)(s.strong,{children:"Synthesize Preset to Table"})," to convert the current editor settings to an ",(0,a.jsx)(s.a,{href:"#audio-file-source",children:"audio file source"})]}),"\n",(0,a.jsx)(s.h2,{id:"keyframes",children:"Keyframes"}),"\n",(0,a.jsxs)(s.p,{children:["Each keyframe is an editable setting that you can position on the timeline. When using multiple ",(0,a.jsx)(s.a,{href:"#sources",children:"sources"})," and ",(0,a.jsx)(s.a,{href:"#modifiers",children:"modifiers"}),", you can have multiple keyframes occupying a single point in time. These will be combined to produce a single waveform."]}),"\n",(0,a.jsx)(s.p,{children:"You create a wavetable by creating multiple keyframes distributed horizontally across the timeline. These can be morphed between using the frame slider on the oscillator. You can preview the wavetable by playing and dragging the playhead across the top of the timeline."}),"\n",(0,a.jsxs)("figure",{style:{display:"block",height:"auto",margin:"40px auto"},children:[(0,a.jsx)("img",{src:"/img/vital-images/keyframes.svg",loading:"lazy",alt:"Keyframes"}),(0,a.jsx)("figcaption",{children:"Wavetable with 9 keyframes, two of which are stacked. The active one is highlighted in purple."})]}),"\n",(0,a.jsx)(s.p,{children:"Editing keyframes:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Add a keyframe"}),": double-click on the timeline."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Remove a keyframe"}),": Right-click and choose ",(0,a.jsx)(s.strong,{children:"Remove Keyframe"})]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Reposition a keyframe"}),": Click and drag to the desired location."]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"sources",children:"Sources"}),"\n",(0,a.jsxs)(s.p,{children:["There are three types of sources you can use to create a wavetable: ",(0,a.jsx)(s.a,{href:"#wave-source",children:"Wave"}),", ",(0,a.jsx)(s.a,{href:"#line-source",children:"Line"}),", and ",(0,a.jsx)(s.a,{href:"#audio-file-source",children:"Audio File"}),"."]}),"\n",(0,a.jsx)(s.h3,{id:"wave-source",children:"Wave source"}),"\n",(0,a.jsx)(s.p,{children:"Wave sources allow for the editing of both the time and frequency domains."}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/wave-sources.svg",alt:"Wave Sources",className:"example-image",loading:"lazy",style:{margin:"20px 0"}}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Choosing a new wave source"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Click ",(0,a.jsx)(s.strong,{children:"Add Source > Wave Source"}),": This will give you a blank wavetable."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:(0,a.jsx)(s.a,{href:"#presets",children:"Preset menu"})}),": Choose one of the presets that happens to be a wave source. There is no way to tell from the presets browser which are wave sources and which are not. You will have to load them to see."]}),"\n"]}),"\n",(0,a.jsx)(s.h4,{id:"wave-source-editor",children:"Wave source editor"}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/wave-source-editor.svg",alt:"Wave Source Editor",loading:"lazy",className:"example-image"}),"\n",(0,a.jsxs)(s.p,{children:["The top portion of the editor is the ",(0,a.jsx)(s.strong,{children:"Wave Source Editor"}),". You can draw the waveform by clicking and dragging. The grid provides a way to snap the drawing to certain quantized values. It can be enabled or disabled and adjusted using the ",(0,a.jsx)(s.strong,{children:"Grid X/Y"})," controls."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Right-click"})," on the waveform to access the following options:"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Clear"}),": Clear the waveform."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Flip Vertical"}),": Flip the waveform vertically (along the x-axis)."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Flip Horizontal"}),": Flip the waveform horizontally (along the y-axis)."]}),"\n"]}),"\n",(0,a.jsx)(s.h4,{id:"blend-modes",children:"Blend modes"}),"\n",(0,a.jsx)(s.p,{children:"The blend modes determine how the waveforms are interpolated between keyframes."}),"\n",(0,a.jsx)(s.p,{children:'There are two blend modes, each with a normal or "smooth" version. The smooth versions are higher quality and use cubic interpolation instead of linear, but may use more CPU:'}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Waveform Blend"}),": Interpolates amplitudes of waveforms for transitions in the time domain."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Spectral Blend"}),": Interpolates amplitudes and phases of harmonics for transitions in the frequency domain."]}),"\n"]}),"\n",(0,a.jsx)(s.h4,{id:"bar-editors",children:"Bar editors"}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/bar-editors.svg",alt:"Bar Editors",loading:"lazy",className:"example-image"}),"\n",(0,a.jsx)(s.p,{children:"There are two bar editors that control parameters related to the harmonics."}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Harmonic Amplitudes"}),": The top bar editor allows you to adjust the amplitudes of the waveform's harmonics."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Harmonic Phases"}),": The bottom bar editor allows you to adjust the phase of the waveform's harmonics."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Click the gear icon in the upper left to see the ",(0,a.jsx)(s.strong,{children:"view options"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Power Scale"}),": Adjust the harmonics' amplitudes using a logarithmic scale. We perceive changes in amplitude logarithmically, so this allows for more natural adjustments."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Amplitude Scale"}),": Adjust the harmonics' amplitudes using a linear scale."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Zoom"}),": Choose different zoom levels for both the amplitudes and phases. You can also use your mouse wheel or trackpad to zoom in and out."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"line-source",children:"Line source"}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/line-source-editor.svg",alt:"Line Source Editor",loading:"lazy",className:"example-image"}),"\n",(0,a.jsx)(s.p,{children:"A line source is similar to a wave source, but only allows editing in the time domain, not the frequency domain."}),"\n",(0,a.jsx)(s.p,{children:"In the image, there is also a waveform (a sine wave) stacked on top of the line source, so you can see how the line source (purple) will affect the wave source (grey)."}),"\n",(0,a.jsxs)(s.p,{children:["You can ",(0,a.jsx)(s.strong,{children:"add breakpoints"})," by double-clicking."]}),"\n",(0,a.jsxs)(s.p,{children:["Right-click and you will get the following options in the ",(0,a.jsx)(s.strong,{children:"context menu"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Remove Point"}),": Remove the point."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Enter Point Phase"}),": Manually enter the phase of the point."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Enter Point Value"}),": Manually enter the amplitude of the point."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Flip Vertical"}),": Flip the line vertically (along the x-axis)."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Flip Horizontal"}),": Flip the line horizontally (along the y-axis)."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.strong,{children:"Pull Power"})," value determines how much the line source will pull the waveform's harmonics towards it."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"To add a new line source"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["Click ",(0,a.jsx)(s.strong,{children:"Add Source > Line Source"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:(0,a.jsx)(s.a,{href:"#presets",children:"Preset menu"})}),": Choose one of the presets that happens to be a line source. There is no way to tell from the presets browser which are line sources and which are not. You will have to load them to see."]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsx)(s.p,{children:"From the Voice tab:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Copy-Paste LFO to Wavetable"}),": From the Voice tab, copy an LFO and paste it into the oscillator via the context menus. This will be editable as a line source:"]}),"\n"]}),"\n",(0,a.jsxs)("figure",{style:{display:"block",height:"auto",maxWidth:"650px",margin:"40px auto"},children:[(0,a.jsx)("img",{src:"/img/vital-images/copy-paste-lfo-to-wavetable.svg",alt:"Copy-Paste LFO to Wavetable",loading:"lazy"}),(0,a.jsx)("figcaption",{children:"Copy-Paste LFO to Wavetable"})]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"audio-file-source",children:"Audio file source"}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/wave-editor-audio-file-source.svg",alt:"Audio File Source Editor",loading:"lazy",className:"example-image"}),"\n",(0,a.jsx)(s.p,{children:"You can also use an audio file (sample) for a source."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"To load an audio file"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"From the wavetable editor"}),":","\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:(0,a.jsx)(s.a,{href:"#presets",children:"Preset menu"})}),": Choose one of the presets that happens to be an audio file source. There is no way to tell from the presets browser which are audio file sources and which are not. You will have to load them to see."]}),"\n",(0,a.jsxs)(s.li,{children:["Choose ",(0,a.jsx)(s.strong,{children:"Synthesize Preset to Table"})," from the wavetable menu (next to the preset selector). This will turn whatever is in the editor into an audio file source."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Drag-and-drop"})," an audio file from your system onto the waveform overview (the small purple window)."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"From the Voice tab"}),":","\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Text to Wavetable"}),": Right-click on the waveform of the oscillator and choose ",(0,a.jsx)(s.strong,{children:"Text to Wavetable"})," to convert text into an audio file source."]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Resynthesize Preset to Wavetable"}),": Convert all of the settings from the preset into an audio file source which will automatically be pasted into the oscillator."]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Drag-and-drop an audio"})," file from your system onto the wavetable of the oscillator:"]}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/drop-sample-on-oscillator.svg",alt:"Drop Sample on Oscillator",className:"example-image",loading:"lazy",style:{maxWidth:"650px"}}),"\n",(0,a.jsxs)(s.p,{children:["When your mouse hovers over the wavetable, you are provided with 3 options: ",(0,a.jsx)(s.strong,{children:"Wavetable"}),", ",(0,a.jsx)(s.strong,{children:"Vocode"}),", and ",(0,a.jsx)(s.strong,{children:"Pitch Splice"}),". The settings (explained below) will be different depending on which you choose:"]}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["If you drop on ",(0,a.jsx)(s.strong,{children:"Wavetable"}),":"]}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/audio-source-drop-on-wavetable-settings.png",alt:"Drop Sample on Oscillator",loading:"lazy",className:"example-image"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Window Size"}),": 2048.0 samples"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Blend Style"}),": Spectral"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Phase Style"}),": None"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["If you drop on ",(0,a.jsx)(s.strong,{children:"Vocode"}),":"]}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/audio-source-drop-on-vocode-settings.png",alt:"Drop Sample on Oscillator",className:"example-image",loading:"lazy"}),"\n",(0,a.jsx)(s.p,{children:"Vital will attempt to detect the pitch of the audio file and set the Window Size accordingly. The other settings are:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Blend Style"}),": File Blend"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Phase Style"}),": Vocode"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["If you drop on ",(0,a.jsx)(s.strong,{children:"Pitch Splice"}),", Vital will attempt to detect the pitch of the audio file and set the Window Size accordingly. The other settings are:"]}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/audio-source-drop-on-pitchslice-settings.png",alt:"Drop Sample on Oscillator",loading:"lazy",className:"example-image"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Blend Style"}),": File Blend"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Phase Style"}),": None"]}),"\n"]}),"\n",(0,a.jsx)(s.admonition,{type:"note",children:(0,a.jsxs)(s.p,{children:["If Vital did not correctly detect the pitch of the audio file when importing, you can manually enter the correct pitch in the ",(0,a.jsx)(s.strong,{children:"Window Size"}),' using the letter name and octave (e.g., "C4").']})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"The settings for importing as Wavetable, Vocode, or Pitch Splice are as follows"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Window Size"}),": The size (in samples) of the keyframe window. Changing this will also change the pitch. You can also type in a note name and octave to set the window size to that pitch."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Window Fade"}),": The proportion of the window size that is used for blending or fading between adjacent keyframes. The range is from 0 to 1, where:","\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"0"})," means no fading is applied, resulting in a hard cut between keyframes."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"1"})," means the entire window size is used for fading, resulting in a smooth transition between segments."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Blend Style"}),": The style of blending or fading to use between keyframes.","\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Spectral"}),": Blend the amplitudes and phases of the harmonics."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Time"}),": Blend the amplitudes of the waveform."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"File"}),": Blends one segment of the wave with another using a windowed overlap technique. It applies a fade effect to smoothly blend the overlapping segments, ensuring smooth transitions and avoiding discontinuities."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Phase Style"}),": The style of phase assignment to use for the frequency components.","\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Clear"}),": Use a non-random pattern for the phases. Specifically, alternating phases of ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsxs)(s.mrow,{children:[(0,a.jsx)(s.mo,{children:"\u2212"}),(0,a.jsxs)(s.mfrac,{children:[(0,a.jsx)(s.mi,{children:"\u03c0"}),(0,a.jsx)(s.mn,{children:"2"})]})]}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"-\\frac{\\pi}{2}"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1.0404em",verticalAlign:"-0.345em"}}),(0,a.jsx)(s.span,{className:"mord",children:"\u2212"}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mopen nulldelimiter"}),(0,a.jsx)(s.span,{className:"mfrac",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsxs)(s.span,{className:"vlist",style:{height:"0.6954em"},children:[(0,a.jsxs)(s.span,{style:{top:"-2.655em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:"2"})})})]}),(0,a.jsxs)(s.span,{style:{top:"-3.23em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,a.jsx)(s.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,a.jsxs)(s.span,{style:{top:"-3.394em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.03588em"},children:"\u03c0"})})})]})]}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.345em"},children:(0,a.jsx)(s.span,{})})})]})}),(0,a.jsx)(s.span,{className:"mclose nulldelimiter"})]})]})})]})," and ",(0,a.jsxs)(s.span,{className:"katex",children:[(0,a.jsx)(s.span,{className:"katex-mathml",children:(0,a.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(s.semantics,{children:[(0,a.jsx)(s.mrow,{children:(0,a.jsxs)(s.mfrac,{children:[(0,a.jsx)(s.mi,{children:"\u03c0"}),(0,a.jsx)(s.mn,{children:"2"})]})}),(0,a.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\frac{\\pi}{2}"})]})})}),(0,a.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(s.span,{className:"base",children:[(0,a.jsx)(s.span,{className:"strut",style:{height:"1.0404em",verticalAlign:"-0.345em"}}),(0,a.jsxs)(s.span,{className:"mord",children:[(0,a.jsx)(s.span,{className:"mopen nulldelimiter"}),(0,a.jsx)(s.span,{className:"mfrac",children:(0,a.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,a.jsxs)(s.span,{className:"vlist-r",children:[(0,a.jsxs)(s.span,{className:"vlist",style:{height:"0.6954em"},children:[(0,a.jsxs)(s.span,{style:{top:"-2.655em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:"2"})})})]}),(0,a.jsxs)(s.span,{style:{top:"-3.23em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,a.jsx)(s.span,{className:"frac-line",style:{borderBottomWidth:"0.04em"}})]}),(0,a.jsxs)(s.span,{style:{top:"-3.394em"},children:[(0,a.jsx)(s.span,{className:"pstrut",style:{height:"3em"}}),(0,a.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,a.jsx)(s.span,{className:"mord mtight",children:(0,a.jsx)(s.span,{className:"mord mathnormal mtight",style:{marginRight:"0.03588em"},children:"\u03c0"})})})]})]}),(0,a.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,a.jsx)(s.span,{className:"vlist-r",children:(0,a.jsx)(s.span,{className:"vlist",style:{height:"0.345em"},children:(0,a.jsx)(s.span,{})})})]})}),(0,a.jsx)(s.span,{className:"mclose nulldelimiter"})]})]})})]})," are assigned to the frequency components. This can help in creating a consistent phase relationship across the waveform."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Vocode"}),": Assign random phases to the frequency components. This can create a vocoder-like effect. The random phases are generated using a random number generator seeded with a specific value to ensure reproducibility."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"modifiers",children:"Modifiers"}),"\n",(0,a.jsxs)(s.p,{children:["Each ",(0,a.jsx)(s.a,{href:"#sources",children:"source"})," can have one or more modifiers applied to it. These modifiers can be used to manipulate the waveform in various ways."]}),"\n",(0,a.jsx)(s.h3,{id:"phase-shift",children:"Phase shift"}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/phase-shift-modifier.svg",alt:"Phase Shift Modifier",loading:"lazy",className:"example-image"}),"\n",(0,a.jsxs)(s.p,{children:["The Phase Shift modifier  manipulates the phase relationships among a wavetable's harmonic components to achieve various timbral effects. By selecting a ",(0,a.jsx)(s.strong,{children:"Phase Style"})," and controlling the ",(0,a.jsx)(s.strong,{children:"Mix"}),", it can produce harmonic shifts, alternate even/odd phase patterns, or clear all phase differences. Interpolating between ",(0,a.jsx)(s.a,{href:"#keyframes",children:"keyframes"})," allows for dynamic phase evolutions across the wavetable."]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Phase Styles"}),":"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Normal"}),": Applies a harmonic phase shift cumulatively up the harmonic series. Each harmonic is shifted by a phase offset that increases progressively."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"+Even/-Odd"}),": Applies different phase treatments to even and odd harmonics. Even harmonics receive a positive phase shift, while odd harmonics receive a negative phase shift."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Harmonic"}),": Uniformly shifts the phase for all harmonics directly by a specified phase offset. This results in a consistent phase shift across all harmonics."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Harm +Even/-Odd"}),": Combines harmonic-based phase shifts with separate handling of even and odd harmonics. Even harmonics are shifted by one phase offset, while odd harmonics are shifted by another."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Clear"}),": Clears all phase information, making all harmonics in phase. This results in a waveform where all frequency components have the same phase, effectively removing any phase differences."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Use the ",(0,a.jsx)(s.strong,{children:"Mix"})," slider to blend between the original and modified phases."]}),"\n",(0,a.jsx)(s.h3,{id:"wave-window",children:"Wave window"}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/wave-window-modifier.svg",alt:"Wave Window Modifier",loading:"lazy",className:"example-image"}),"\n",(0,a.jsx)(s.p,{children:"Wave Window modifiers apply a chosen windowing function to the beginning and end of a waveform, tapering its amplitude based on the values of the Left Position and Right Position. Different window shapes (Raised Cos, Half Sin, Linear, Square, or Wiggle) produce various slopes and transitions. By interpolating between keyframes, users can animate the window size and shape over the wavetable, influencing how the waveform's amplitude envelope evolves dynamically."}),"\n",(0,a.jsx)(s.p,{children:"The different window shapes apply various tapering functions to the beginning and end of a waveform:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Raised Cos"}),": Applies a cosine-based window function, creating a smooth rise and fall in amplitude."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Half Sin"}),": Uses a half-sine wave to taper the amplitude, resulting in a smooth, sinusoidal transition."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Linear"}),": Applies a linear ramp function, creating a straight-line transition in amplitude."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Square"}),": Creates a sudden step change in amplitude, effectively turning the waveform on or off abruptly."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Wiggle"}),": Applies a more complex, wiggly shape to the amplitude transition."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Left Position"}),": Determines the position of the window function's left edge, controlling where the tapering begins."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Right Position"}),": Determines the position of the window function's right edge, controlling where the tapering ends."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"frequency-filter",children:"Frequency filter"}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/frequency-filter-modifier.svg",alt:"Frequency Filter Modifier",loading:"lazy",className:"example-image"}),"\n",(0,a.jsx)(s.p,{children:"The Frequency Filter modifier changes the harmonic content of a wave by applying frequency-domain filtering:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Low Pass"}),": A low-pass filter allows frequencies below a certain cutoff point to pass through while attenuating higher frequencies."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Band Pass"}),": A band-pass filter allows a range of frequencies centered around a cutoff point to pass through while attenuating frequencies outside this range."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"High Pass"}),": A high-pass filter allows frequencies above a certain cutoff point to pass through while attenuating lower frequencies."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Comb"}),": A comb filter creates a series of notches or peaks in the frequency spectrum, producing a comb-like pattern of frequency attenuation and reinforcement."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Cutoff"})," (",(0,a.jsx)(s.em,{children:"0 to 10"}),"): The point at which the filter begins to take effect, determining the point at which frequencies are attenuated or allowed to pass through."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Shape"})," (",(0,a.jsx)(s.em,{children:"0 to 1"}),"): Controls the slope or steepness of the filter's attenuation curve. It determines how sharply the frequencies are attenuated around the cutoff frequency."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Normalize"}),": When enabled, the filter's output is normalized to prevent clipping and ensure consistent amplitude levels across the wavetable."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"slew-limiter",children:"Slew limiter"}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/slew-limiter-modifier.svg",alt:"Slew Limiter Modifier",loading:"lazy",className:"example-image"}),"\n",(0,a.jsxs)(s.p,{children:["The Slew Limiter modifier applies ",(0,a.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Slew_rate",children:"slew-rate limiting"})," to the wavetable's time-domain signal, controlling how quickly the waveform can rise or fall per sample. By adjusting the Down and Up Limits, you can achieve smoother transitions and reduce harsh dynamics in the resulting sound:"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Down Limit"})," (",(0,a.jsx)(s.em,{children:"0 to 1"}),"): The maximum rate at which the waveform can decrease in amplitude per sample. A value of 0 means no downward slew limiting, while a value of 1 imposes the maximum limit."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Up Limit"})," (",(0,a.jsx)(s.em,{children:"0 to 1"}),"): The maximum rate at which the waveform can increase in amplitude per sample. A value of 0 means no upward slew limiting, while a value of 1 imposes the maximum limit."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"wave-folder",children:"Wave folder"}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/wave-folder-modifier.svg",alt:"Wave Folder Modifier",className:"example-image",loading:"lazy"}),"\n",(0,a.jsx)(s.p,{children:"The Wave Folder modifier applies a nonlinear wave-folding effect to a wavetable's time-domain waveform. By scaling and folding the waveform through sine and arcsine functions, it adds harmonic complexity and can create interesting timbral variations. Adjusting the fold Multiply parameter in keyframes and interpolating between them allows dynamic control over the amount of wave folding across the wavetable:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Multiply"})," (",(0,a.jsx)(s.em,{children:"1 to 32"}),"): The amount of wave folding applied to the waveform. Higher values result in more pronounced folding and increased harmonic complexity."]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"wave-warp",children:"Wave warp"}),"\n",(0,a.jsx)("img",{src:"/img/vital-images/wave-warp-modifier.svg",alt:"Wave Warp Modifier",loading:"lazy",className:"example-image"}),"\n",(0,a.jsx)(s.p,{children:"The Wave Warp modifier allows nonlinear reshaping of a waveform by warping it horizontally (time-axis) and vertically (amplitude-axis). You can set warp powers (X Warp and Y Warp) and choose symmetric or asymmetric transformations, creating a wide range of waveform distortions. Interpolation between keyframes and these nonlinear transformations can produce evolving, dynamic waves that move beyond simple linear scaling."}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"X Asymmetric"})," (",(0,a.jsx)(s.em,{children:"on/off"}),"): Controls whether the horizontal warping is applied asymmetrically."]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["When ",(0,a.jsx)(s.strong,{children:"on"}),", the transformation differs for values on different sides of the waveform."]}),"\n",(0,a.jsxs)(s.li,{children:["When ",(0,a.jsx)(s.strong,{children:"off"}),", the transformation is symmetric around the center point."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"X Warp"})," (",(0,a.jsx)(s.em,{children:"-20 to 20"}),"): Controls the strength of the horizontal (time-axis) warping. Positive values stretch the waveform horizontally, while negative values compress it."]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Y Asymmetric"})," (",(0,a.jsx)(s.em,{children:"on/off"}),"): Controls whether the vertical warping is applied asymmetrically."]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["When ",(0,a.jsx)(s.strong,{children:"on"}),", the transformation differs for positive and negative amplitude values."]}),"\n",(0,a.jsxs)(s.li,{children:["When ",(0,a.jsx)(s.strong,{children:"off"}),", the transformation is symmetric around the zero amplitude."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Y Warp"})," (",(0,a.jsx)(s.em,{children:"-20 to 20"}),"): Controls the strength of the vertical (amplitude-axis) warping. Positive values stretch the waveform vertically, while negative values compress it."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.b,{})]})}function m(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);