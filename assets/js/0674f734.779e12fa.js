"use strict";(self.webpackChunkportfolio_site=self.webpackChunkportfolio_site||[]).push([[7808],{27705:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"Vital/UserGuide/Advanced","title":"Advanced","description":"The Advanced tab in Vital exposes global and oscillator-specific settings that fine-tune how the synth operates. These include oscillator unison configurations, global pitch/voice controls, quality (oversampling) settings, display preferences, and tuning options.","source":"@site/docs/Vital/UserGuide/Advanced.mdx","sourceDirName":"Vital/UserGuide","slug":"/Vital/UserGuide/Advanced","permalink":"/docs/Vital/UserGuide/Advanced","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Advanced"},"sidebar":"tutorialSidebar","previous":{"title":"Effects","permalink":"/docs/Vital/UserGuide/Effects"},"next":{"title":"Code Docs","permalink":"/docs/Vital/Vital-Code-Docs"}}');var t=s(74848),o=s(28453),r=s(83677);const l={title:"Advanced"},a="Advanced",c={},h=[{value:"Oscillator Options",id:"oscillator-options",level:3},{value:"Oscillator Unison",id:"oscillator-unison",level:3},{value:"Voice Settings",id:"voice-settings",level:3},{value:"Oversampling",id:"oversampling",level:3},{value:"Display Settings",id:"display-settings",level:3},{value:"Analysis",id:"analysis",level:3}];function d(e){const n={a:"a",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"advanced",children:"Advanced"})}),"\n",(0,t.jsx)(n.p,{children:"The Advanced tab in Vital exposes global and oscillator-specific settings that fine-tune how the synth operates. These include oscillator unison configurations, global pitch/voice controls, quality (oversampling) settings, display preferences, and tuning options."}),"\n",(0,t.jsx)("img",{src:"/img/vital-images/advanced-tab.svg",alt:"Advanced tab",className:"example-image",loading:"lazy",style:{margin:"40px 0"}}),"\n",(0,t.jsx)(n.h3,{id:"oscillator-options",children:"Oscillator Options"}),"\n",(0,t.jsx)(n.p,{children:"If the oscillator is enabled, you can edit these settings:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Note Track"}),": If enabled, the oscillator will track incoming MIDI notes, adjusting its pitch accordingly. When disabled, the oscillator maintains its pitch regardless of the played notes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Hi-Res Wavetable"}),": Uses higher-resolution wavetable data for smoother, more detailed timbres. Although it improves sound quality, it may consume more CPU."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"oscillator-unison",children:"Oscillator Unison"}),"\n",(0,t.jsx)(n.p,{children:"This section provides controls for unison stacking and spread. If the oscillator is enabled and unison is more than one voice, the following settings are available:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Stack Options"}),": These modes dictate how multiple unison voices are arranged. The unison voices will be distributed along the ",(0,t.jsx)(n.strong,{children:"detune range"})," (see below). They are also heavily impacted by the unison settings on the oscillator. For some, you will need several, or many, unison voices to hear the effect these have."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Unison"}),": Layers identical copies of the waveform along the detune range."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Center Drop 12"}),": The center voices of the unison stack will be lowered in pitch by one octave (12 semitones)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Center Drop 24"}),": The center voices of the unison stack will be lowered in pitch by two octaves (24 semitones)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Octave"}),": Every second unison voice will play up an octave."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"2x Octave"}),": Every second unison voice will play up either 1 or 2 octaves."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Power Chord"}),": Every second unison voice will play up a perfect 5th, creating a power chord effect."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"2x Power Chord"}),": Every second unison voice will play up either a perfect 5th or an octave."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Major Chord"}),": Voices are arranged according to a major triad (root, major third, perfect fifth)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Minor Chord"}),": Voices are arranged according to a minor triad (root, minor third, perfect fifth)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Harmonics"}),": Voices are tuned to the natural harmonic series."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Odd Harmonics"}),": Rather than using the full harmonic series, only the odd-numbered harmonics are used."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Detune Range"})," (",(0,t.jsx)(n.em,{children:"0 to 48 semitones"}),"): Sets how far each unison voice deviates in pitch. Range is from 0 to 4 octaves. When the range is only a few semitones, the unison voices will be close in pitch, creating a chorus-like effect. Larger ranges yield a thicker, more detuned sound."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Unison Blend"})," (",(0,t.jsx)(n.em,{children:"0 to 100%"}),"): Controls how the combined unison voices mix together. Lower values create a more coherent, centralized output. Higher values emphasize individual voices, creating a layered sound."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Stereo Unison"})," (",(0,t.jsx)(n.em,{children:"0 to 100%"}),"): Provides a stereo spread by offsetting unison voices between the left and right channels, enhancing width. Lower values are more mono, while higher values are more stereo."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Table Spread"})," (",(0,t.jsx)(n.em,{children:"-128 to 128"}),"): Alters the distribution of voices within the wavetable, affecting how different parts of the table are emphasized. This is shown in the lowest row in the visualizer above the control. For this to have an effect, the wavetable needs to have multiple frames."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Spect Spread"})," (",(0,t.jsx)(n.em,{children:"-100% to 100%"}),"): Modifies the spacing of the unison voices for the Spectral Morph knob of the oscillator, which is the left of the two mod knobs. This can widen or narrow the perceived tonal range. For this to have any effect, the oscillator needs to have a spectral morph option enabled. The middle row of the visualizer above the control shows the effect of this control."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Dist Spread"})," (",(0,t.jsx)(n.em,{children:"-100% to 100%"}),"): Changes the spread of unison voices for the Wave Morph knob of the oscillator. This knob is to the right of the Spectral Morph knob. For this to have any effect, the oscillator needs to have a wave morph option enabled. The top row of the visualizer above the control shows the effect of this control."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"voice-settings",children:"Voice Settings"}),"\n",(0,t.jsx)(n.p,{children:"These settings govern how the synthesizer handles note allocation and overall tuning."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note Priority"}),": Decides which notes are retained when polyphony limits are reached. The amount of polyphony is controlled by the ",(0,t.jsx)(n.strong,{children:"Voices"})," option (see ",(0,t.jsx)(n.a,{href:"/docs/Vital/UserGuide/Global-Controls-and-Header-Bar#note-settings",children:"Note Settings"}),")."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Newest"}),": Keeps the most recently played notes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Oldest"}),": Retains the first notes played."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Highest"}),": Prioritizes the highest pitches."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Lowest"}),": Prioritizes the lowest pitches."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Round Robin"}),": Cycles through voices evenly."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Voice Override"}),": Determines how new notes interact with active voices:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Kill"}),": Immediately stops an existing voice."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Steal"}),": Reassigns an active voice to the new note."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Tuning"}),": Offers global tuning adjustments via tuning files. This is explained in the ",(0,t.jsx)(n.a,{href:"/docs/Vital/UserGuide/Global-Controls-and-Header-Bar#presets",children:"Presets"}),' section, under "Load Tuning File".']}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"MPE Enabled"}),": Activates Multidimensional Polyphonic Expression, allowing per-note expression, if your MIDI controller supports it."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Tune (Cents)"})," (",(0,t.jsx)(n.em,{children:"-100 to 100 cents"}),"): Provides fine-tuning in cents (1/100th of a semitone) for precise pitch control."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Transpose"})," (",(0,t.jsx)(n.em,{children:"-48 to 48 semitones"}),"): Shifts the overall pitch up or down in semitones."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"oversampling",children:"Oversampling"}),"\n",(0,t.jsx)(n.p,{children:"Improves sound quality at the expense of CPU:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"1x (Draft)"}),": Basic processing; lowest CPU usage."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"2x (Recommended)"}),": A balance between quality and performance."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"4x (High CPU)"}),": Higher quality with more CPU consumption."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"8x (Ultra CPU)"}),": Maximum quality, best for final renders but very CPU intensive."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"display-settings",children:"Display Settings"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Frequency Units"}),": Lets users choose whether frequency values are shown in ",(0,t.jsx)(n.strong,{children:"Semitones"})," (musical half steps) or ",(0,t.jsx)(n.strong,{children:"Hertz"})," (cycles per second)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Skin"}),": Allows switching display themes, affecting the visual look of the interface."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"analysis",children:"Analysis"}),"\n",(0,t.jsxs)(n.p,{children:["An ",(0,t.jsx)(n.strong,{children:"oscilloscope"})," (measuring amplitude over time) and ",(0,t.jsx)(n.strong,{children:"spectrogram"})," (frequency content over time) provide visual feedback on the sound."]}),"\n",(0,t.jsx)(r.b,{})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);